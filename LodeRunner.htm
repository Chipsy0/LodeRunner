<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">

<head>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Lode Runner par Caroline Chagnon et Razvan Pruteanu</title>
    <link rel="stylesheet" type="text/css" href="StyleProjet1.css" />
    <!-- Code JavaScript local -->
    <script type="text/javascript">
        var objCanvas = null;
        var objC2D = null;
        var objCycleAnimation = null;

        var tabTableau = null;
        var tabObjets = null;

        function initAnimation() {
            objCanvas = document.getElementById('monCanvas');
            objCanvas.focus();
            objC2D = objCanvas.getContext('2d');
            tabObjets = new Array(17);
            for (var i = 0; i < tabObjets.length; i++){
                tabObjets[i] = new Array(28);
            }

            initTableau();
            dessiner(); // Dessiner une première fois
            //animer();  // animer
        }

        // Construire les passerelles
        function initPasserelles(intY,intX) {
            var objPasserelle = new Object();
            objPasserelle.strCouleurPrim = '#8E443D';
            objPasserelle.strCouleurSec = '#441F1E';
            objPasserelle.intLargeur = 30;
            objPasserelle.intHauteur = 30;
            objPasserelle.intX = intX;
            objPasserelle.intY = intY;
            tabObjets[intY][intX] = objPasserelle;
        }

        function initTableau() {
            /*0 nothing, 1 bricks, 2 ladders, 3 gold, 
            4 just bottom part legend so you know you can remove this, 5 rope shit*/

            tabTableau = new Array();
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0]);
            tabTableau.push([1, 1, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1]);
            tabTableau.push([0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 0, 0, 3, 0, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 0, 0, 0, 3, 0, 0, 0]);
            tabTableau.push([0, 0, 0, 0, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2]);
            tabTableau.push([0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]);
            tabTableau.push([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);
            tabTableau.push([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]);          

            for (var i = 0; i < tabTableau.length; i++) {
                for (var j = 0; j < tabTableau[i].length; j++) {
                    switch (tabTableau[i][j]) {
                        case 1:
                            initPasserelles(i,j);
                            break;

                        case 2: 
                            initEchelles(i,j);
                            break;

                        case 3:
                            
                            break;

                        case 4:
                            initSol(i,j);
                            break;

                        case 5:
                            initCord(i,j);
                            break;

                    }
                }
            }
        }

        // Un cycle d'animation	
        function animer() {
            // Requête pour le prochain cycle
            objCycleAnimation = requestAnimationFrame(animer);

            // Le cycle d'animation
            effacerDessin();
            mettreAjourAnimation();
            dessiner();
        }

        // Arrêter l'animation
        function arreterAnimation() {
            if (objCycleAnimation != null)
                cancelAnimationFrame(objCycleAnimation);
            objCycleAnimation = null;
        }

        // Pour effacer le dessin
        function effacerDessin() {
            objC2D.clearRect(0, 0, objCanvas.width, objCanvas.height);
        }

        // Pour mettre à jour l'animation
        function mettreAjourAnimation() {

        }


        // Pour dessiner le tableau
        function dessiner() {                        
            for (var i = 0; i < tabTableau.length; i++) {
                for (var j = 0; j < tabTableau[i].length; j++) {
                    switch (tabTableau[i][j]) {
                        case 1:
                            dessinerPasserelles(i,j);
                            break;

                        case 2: 
                            dessinerEchelles(i,j);
                            break;
                        
                        

                        case 4: 
                            dessinerSol(i,j);
                            break;

                        case 5: 
                            dessinerCord(i,j);
                            break;
                        
                    }
                }
            }
        }

        // Pour dessiner les passerelles
        function dessinerPasserelles(intY,intX) {
            objC2D.save();
            var objPasserelle = tabObjets[intY][intX];
            intPosX = objPasserelle.intX * 30;
            intPosY = objPasserelle.intY * 30;
            objC2D.fillStyle = objPasserelle.strCouleurPrim;
            objC2D.fillRect(intPosX,intPosY,objPasserelle.intLargeur,objPasserelle.intHauteur);
            objC2D.strokeStyle = objPasserelle.strCouleurSec;
            objC2D.fillStyle = objPasserelle.strCouleurSec;
            objC2D.lineWidth = 2;
            objC2D.translate(intPosX,intPosY);
            objC2D.strokeRect(1,0,objPasserelle.intLargeur -2,objPasserelle.intHauteur/2);
            objC2D.beginPath();
            objC2D.moveTo(0,objPasserelle.intHauteur);
            objC2D.lineTo(objPasserelle.intLargeur,objPasserelle.intHauteur);
            objC2D.stroke();
            objC2D.beginPath();
            objC2D.moveTo(objPasserelle.intLargeur/2,objPasserelle.intHauteur/2);
            objC2D.lineTo(objPasserelle.intLargeur/2,objPasserelle.intHauteur);
            objC2D.stroke();
            objC2D.fillRect(objPasserelle.intLargeur/2,objPasserelle.intHauteur/2,3,objPasserelle.intHauteur/2);
            objC2D.restore();
        }

        // Pour dessiner les echelles
        function dessinerEchelles(intY,intX) {
            objC2D.save();
            var objEchelle = tabObjets[intY][intX];
            intPosX = objEchelle.intX * 30;
            intPosY = objEchelle.intY * 30;
            
            objC2D.fillStyle = "#f05518";
            objC2D.fillRect(intPosX,intPosY+2,30,2);
            objC2D.fillRect(intPosX,intPosY+9,30,2);
            objC2D.fillRect(intPosX,intPosY+16,30,2);
            objC2D.fillRect(intPosX,intPosY+24,30,2);

            objC2D.fillStyle = "#f09218";
            objC2D.fillRect(intPosX,intPosY,5,30);
            objC2D.fillRect(intPosX +25,intPosY,5,30);
            objC2D.restore();
        }

        // Pour dessiner le cord
        function dessinerCord(intY,intX) {
            objC2D.save();
            var objCord = tabObjets[intY][intX];
            intPosX = objCord.intX * 30;
            intPosY = objCord.intY * 30;    
            objC2D.fillStyle = objCord.strCouleur;
            objC2D.fillRect(intPosX,intPosY+4,objCord.intLargeur,objCord.intHauteur);
            objC2D.restore();
        }


        // Pour dessiner le sol
        function dessinerSol(intY,intX) {
            objC2D.save();
            var objSol = tabObjets[intY][intX];
            intPosX = objSol.intX * 30;
            intPosY = objSol.intY * 30;            
            objC2D.strokeStyle = '#3d3c3b';
            objC2D.lineWidth = 4;
            objC2D.fillStyle = objSol.strCouleur;
            objC2D.fillRect(intPosX,intPosY,objSol.intLargeur,objSol.intHauteur);
            objC2D.strokeRect(intPosX,intPosY,objSol.intLargeur,objSol.intHauteur);
            objC2D.restore();
        }

    </script>
</head>

<body onload="initAnimation()">
    <canvas id="monCanvas" width="750" height="510" tabIndex="1" class="sCanvas">
        Votre navigateur ne supporte pas la balise canvas
    </canvas>
</body>

</html>